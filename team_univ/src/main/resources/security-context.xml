<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:security="http://www.springframework.org/schema/security"
	xsi:schemaLocation="http://www.springframework.org/schema/security https://www.springframework.org/schema/security/spring-security.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">

	<!-- 정적 리소스 파일 -->
	<security:http pattern="/resources/**" security="none"/>	
	
	<security:http auto-config="true" use-expressions="true" create-session="never">
		<security:intercept-url pattern="/professor/**" access="hasAnyRole('ROLE_ADMIN','ROLE_PROFESSOR')"/>
		<security:intercept-url pattern="/student/**" access="hasAnyRole('ROLE_ADMIN','ROLE_STUDENT')"/>
		<security:intercept-url pattern="/employee/**" access="hasAnyRole('ROLE_ADMIN','ROLE_EMPLOYEE')"/>
		<security:intercept-url pattern="/admin/**" access="hasRole('ROLE_ADMIN')"/>
		<security:intercept-url pattern="/guest/**" access="permitAll"/> 
		
		<!-- 로그인 폼 -->
		<security:form-login login-page="/guest/login"
			login-processing-url="/guest/login_check"
			authentication-success-handler-ref="userLoginSuccessHandler"
			authentication-failure-handler-ref="userLoginFailureHandler"
			username-parameter="m_id" password-parameter="m_pwd"
		/>
		
		<!-- 로그아웃 -->
		<security:logout logout-url="/logout" logout-success-url="/"/>
		
		<security:session-management> 
			<security:concurrency-control max-sessions="1" 
							 expired-url="/guest/login" 
							 error-if-maximum-exceeded="true"/> 
		</security:session-management>
		
		<!-- 접근 권한이 없는 경우의 코드 -->
		<security:access-denied-handler ref="userDeniedHandler"/> 
		
	</security:http>
	
	
	<bean id="userLoginSuccessHandler" class="com.team.univ.service.UserLoginSuccessHandler">
		<constructor-arg name="sqlSession" ref="sqlSession"/>
	</bean> 
	
	<bean id="userLoginFailureHandler" class="com.team.univ.service.UserLoginFailureHandler">
		<constructor-arg name = "sqlSession" ref = "sqlSession" />
		<constructor-arg name = "passwordEncoder" ref = "bCryptPasswordEncoder" />
	</bean> 
	
	<bean id="userDeniedHandler" class="com.team.univ.service.UserDeniedHandler" /> 
		
	<!-- 로그인 인증을 처리하는 빈 --> 
	<bean id="userService" class="com.team.univ.service.UserAuthenticationService">
		<constructor-arg name="sqlSession" ref="sqlSession"/>
	</bean> 
		
	<!-- 비밀번호 암호화 빈 -->
	<bean id="bCryptPasswordEncoder" class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder"/>
		
	
	
</beans>
